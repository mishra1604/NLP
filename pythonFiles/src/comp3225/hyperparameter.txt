# WITH MAX_FILE = 50 MAX_ITERATIONS = 150
INFO:tensorflow:starting randomized search for hyperparameters
Fitting 2 folds for each of 10 candidates, totalling 20 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 16 concurrent workers.
INFO:tensorflow:best params: {'c1': 0.43513296118840533, 'c2': 0.006566604343960832}
INFO:tensorflow:best micro F1 score: 0.6309639290716484
INFO:tensorflow:model size: 0.72M
INFO:tensorflow:cv_results_ = {'mean_fit_time': array([187.56121552, 165.61854327, 177.83192956, 166.634552  ,
       177.74859071, 179.67698109, 168.68212783, 172.16510642,
       108.87989068, 107.18144858]), 'std_fit_time': array([ 2.73107493,  1.53301108, 15.43987477,  5.85882282, 14.07508945,
       12.06226742,  8.66676342,  1.92710149,  0.2804184 ,  0.33281147]), 'mean_score_time': array([2.85878468, 3.42550468, 2.8946259 , 3.2664988 , 2.75672126,
       2.40878642, 2.86107552, 2.49625432, 1.82123482, 1.67497647]), 'std_score_time': array([0.04213476, 0.2174511 , 0.54409766, 0.31058216, 0.70699596,
       0.35878575, 0.34854996, 0.15332139, 0.0540005 , 0.07573712]), 'param_c1': masked_array(data=[0.5675799122435402, 0.2798718653105924,
                   1.2404662986382493, 1.3754291529085523,
                   0.4004472944984925, 2.5946201948456995,
                   0.3051221992938081, 1.092186181358948,
                   0.29307861226655496, 0.43513296118840533],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_c2': masked_array(data=[0.04337756349847041, 0.05680587640558298,
                   0.014592538073847625, 0.057426115639047884,
                   0.022505369391310384, 0.04000247743003427,
                   0.004234294462444862, 0.027582555855602587,
                   0.02151799691113369, 0.006566604343960832],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'c1': 0.5675799122435402, 'c2': 0.04337756349847041}, {'c1': 0.2798718653105924, 'c2': 0.05680587640558298}, {'c1': 1.2404662986382493, 'c2': 0.014592538073847625}, {'c1': 1.3754291529085523, 'c2': 0.057426115639047884}, {'c1': 0.4004472944984925, 'c2': 0.022505369391310384}, {'c1': 2.5946201948456995, 'c2': 0.04000247743003427}, {'c1': 0.3051221992938081, 'c2': 0.004234294462444862}, {'c1': 1.092186181358948, 'c2': 0.027582555855602587}, {'c1': 0.29307861226655496, 'c2': 0.02151799691113369}, {'c1': 0.43513296118840533, 'c2': 0.006566604343960832}], 'split0_test_score': array([0.57493178, 0.5689761 , 0.57739623, 0.56724575, 0.56636708,
       0.51087335, 0.56749116, 0.57844722, 0.57189676, 0.57277497]), 'split1_test_score': array([0.68583536, 0.68927395, 0.67197671, 0.67120863, 0.68191429,
       0.63787465, 0.68882996, 0.68066698, 0.68615332, 0.68915289]), 'mean_test_score': array([0.63038357, 0.62912503, 0.62468647, 0.61922719, 0.62414068,
       0.574374  , 0.62816056, 0.6295571 , 0.62902504, 0.63096393]), 'std_test_score': array([0.05545179, 0.06014892, 0.04729024, 0.05198144, 0.05777361,
       0.06350065, 0.0606694 , 0.05110988, 0.05712828, 0.05818896]), 'rank_test_score': array([ 2,  4,  7,  9,  8, 10,  6,  3,  5,  1])}


# WITH MAX_FILE = 20 MAX_ITERATIONS = 50
INFO:tensorflow:starting randomized search for hyperparameters
Fitting 2 folds for each of 10 candidates, totalling 20 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 16 concurrent workers.
[Parallel(n_jobs=-1)]: Done  10 out of  20 | elapsed:  1.0min remaining:  1.0min
INFO:tensorflow:best params: {'c1': 0.10184237972369639, 'c2': 0.015375146415456578}
INFO:tensorflow:best micro F1 score: 0.540478480926478
INFO:tensorflow:model size: 1.21M
INFO:tensorflow:cv_results_ = {'mean_fit_time': array([41.98222375, 44.4732101 , 54.95888782, 48.76692712, 45.74508893,
       53.07395005, 50.79705846, 52.48412728, 39.93861306, 35.66275346]), 'std_fit_time': array([3.40002561, 2.2573173 , 2.65403986, 1.51534331, 0.37982547,
       3.76298261, 3.23216546, 0.46553993, 1.08773887, 0.40393293]), 'mean_score_time': array([2.24087811, 2.53876901, 1.78533757, 1.98333156, 2.57002258,
       1.66713142, 1.5339911 , 1.40349829, 1.41375923, 1.26162934]), 'std_score_time': array([0.23291683, 0.14904094, 0.12537968, 0.06761706, 0.37791777,
       0.15966535, 0.00691104, 0.02925003, 0.1537497 , 0.11267447]), 'param_c1': masked_array(data=[0.2677807921419956, 1.048356676028395,
                   0.32431603231419676, 1.1231782454272847,
                   0.10846918645750536, 0.046546972048067646,
                   1.4794298843884284, 0.2933140233169982,
                   0.10184237972369639, 0.5416867836632723],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_c2': masked_array(data=[0.16131651338711828, 0.12408576264183678,
                   0.03706892828233832, 0.026521586616930798,
                   0.1294962450335644, 0.026054102318987138,
                   0.08424388176081217, 0.10773670851138129,
                   0.015375146415456578, 0.038869924689792626],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'c1': 0.2677807921419956, 'c2': 0.16131651338711828}, {'c1': 1.048356676028395, 'c2': 0.12408576264183678}, {'c1': 0.32431603231419676, 'c2': 0.03706892828233832}, {'c1': 1.1231782454272847, 'c2': 0.026521586616930798}, {'c1': 0.10846918645750536, 'c2': 0.1294962450335644}, {'c1': 0.046546972048067646, 'c2': 0.026054102318987138}, {'c1': 1.4794298843884284, 'c2': 0.08424388176081217}, {'c1': 0.2933140233169982, 'c2': 0.10773670851138129}, {'c1': 0.10184237972369639, 'c2': 0.015375146415456578}, {'c1': 0.5416867836632723, 'c2': 0.038869924689792626}], 'split0_test_score': array([0.46737087, 0.45797206, 0.45875772, 0.45653516, 0.45685189,
       0.46425497, 0.44527626, 0.46260007, 0.46482527, 0.45880938]), 'split1_test_score': array([0.61117222, 0.59480453, 0.62175393, 0.59161437, 0.61829384,
       0.60753667, 0.57790586, 0.61306765, 0.6161317 , 0.61096565]), 'mean_test_score': array([0.53927154, 0.5263883 , 0.54025583, 0.52407477, 0.53757287,
       0.53589582, 0.51159106, 0.53783386, 0.54047848, 0.53488751]), 'std_test_score': array([0.07190068, 0.06841623, 0.0814981 , 0.0675396 , 0.08072098,
       0.07164085, 0.0663148 , 0.07523379, 0.07565321, 0.07607814]), 'rank_test_score': array([ 3,  8,  2,  9,  5,  6, 10,  4,  1,  7])}


# WITH MAX_FILE = 50 AND MAX_ITERATIONS = 100
INFO:tensorflow:starting randomized search for hyperparameters
Fitting 2 folds for each of 10 candidates, totalling 20 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 16 concurrent workers.
[Parallel(n_jobs=-1)]: Done  10 out of  20 | elapsed:  2.3min remaining:  2.3min
INFO:tensorflow:best params: {'c1': 0.8431369321877845, 'c2': 0.021533211810001562}
INFO:tensorflow:best micro F1 score: 0.6321616999827249
INFO:tensorflow:model size: 0.55M
INFO:tensorflow:cv_results_ = {'mean_fit_time': array([113.1630795 , 124.44530571, 124.206002  , 126.78152013,
       115.85973251, 124.43229604, 125.758654  , 122.87424982,
        80.84933233,  76.26576936]), 'std_fit_time': array([1.52121806, 2.08854663, 5.50720644, 0.34025764, 1.79627478,
       2.88457966, 1.46028554, 1.06553352, 0.97989058, 4.30601609]), 'mean_score_time': array([3.60369503, 3.46234155, 3.13296711, 2.91962314, 3.52037501,
       2.53696191, 2.16740382, 2.21407485, 1.91641057, 1.68143296]), 'std_score_time': array([0.05219495, 0.42652678, 0.41405499, 0.12333632, 0.07068634,
       0.10273039, 0.06620419, 0.02153778, 0.04147112, 0.24084163]), 'param_c1': masked_array(data=[0.3740997424138014, 0.545651446975583,
                   0.3782729077306886, 0.0015234326151714282,
                   0.39207466922229495, 0.2607071810049889,
                   0.8431369321877845, 0.03731239183756903,
                   0.37222542531668806, 0.35013684934361083],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_c2': masked_array(data=[0.052957213008206896, 0.056140587846426254,
                   0.03288642136750913, 0.07436375116561038,
                   0.06008226550978817, 0.008241332593301086,
                   0.021533211810001562, 0.11389955966700874,
                   0.03530689797858323, 0.055288012924887456],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'c1': 0.3740997424138014, 'c2': 0.052957213008206896}, {'c1': 0.545651446975583, 'c2': 0.056140587846426254}, {'c1': 0.3782729077306886, 'c2': 0.03288642136750913}, {'c1': 0.0015234326151714282, 'c2': 0.07436375116561038}, {'c1': 0.39207466922229495, 'c2': 0.06008226550978817}, {'c1': 0.2607071810049889, 'c2': 0.008241332593301086}, {'c1': 0.8431369321877845, 'c2': 0.021533211810001562}, {'c1': 0.03731239183756903, 'c2': 0.11389955966700874}, {'c1': 0.37222542531668806, 'c2': 0.03530689797858323}, {'c1': 0.35013684934361083, 'c2': 0.055288012924887456}], 'split0_test_score': array([0.57218977, 0.57281443, 0.56956258, 0.55584526, 0.56642881,
       0.56718992, 0.58369291, 0.55810235, 0.56558149, 0.56590496]), 'split1_test_score': array([0.68121552, 0.68504268, 0.68435823, 0.67497597, 0.68408945,
       0.68657789, 0.68063049, 0.67910014, 0.68472062, 0.68947201]), 'mean_test_score': array([0.62670265, 0.62892855, 0.6269604 , 0.61541062, 0.62525913,
       0.6268839 , 0.6321617 , 0.61860124, 0.62515106, 0.62768848]), 'std_test_score': array([0.05451287, 0.05611413, 0.05739783, 0.05956536, 0.05883032,
       0.05969399, 0.04846879, 0.06049889, 0.05956957, 0.06178352]), 'rank_test_score': array([ 6,  2,  4, 10,  7,  5,  1,  9,  8,  3])}


# WITH MAX_FILE = 350 AND MAX_ITERATIONS = 100
INFO:tensorflow:micro avg       -> f1 0.83 ; prec 0.85 ; recall 0.80
INFO:tensorflow:macro avg       -> f1 0.56 ; prec 0.60 ; recall 0.53
algorithm='lbfgs',
c1=0.1,
c2=0.1,
max_iterations=max_iter,
all_possible_transitions=True

# WITH MAX_FILE = 350 AND MAX_ITERATIONS = 100 ---> PERFORMING RANDOM GRID SEARCH WITH 20 ITERATIONS
INFO:tensorflow:starting randomized search for hyperparameters
Fitting 2 folds for each of 10 candidates, totalling 20 fits
[Parallel(n_jobs=-1)]: Using backend LokyBackend with 16 concurrent workers.
[Parallel(n_jobs=-1)]: Done  10 out of  20 | elapsed:  3.8min remaining:  3.8min
[Parallel(n_jobs=-1)]: Done  20 out of  20 | elapsed:  5.6min finished
INFO:tensorflow:best params: {'c1': 0.2806805093451194, 'c2': 0.0010488143930031278}
INFO:tensorflow:best micro F1 score: 0.6506335980718323
INFO:tensorflow:model size: 1.18M
INFO:tensorflow:cv_results_ = {'mean_fit_time': array([201.85340941, 201.45301688, 214.64679015, 191.61693919,
       209.82207561, 195.56906295, 201.33404946, 192.62532783,
       124.26785171, 115.21158993]), 'std_fit_time': array([17.2540971 , 13.99798715, 10.3368541 ,  6.98112118,  7.67208743,
        6.30562592, 13.56321549, 12.22925806,  5.4860276 ,  9.63004291]), 'mean_score_time': array([5.22722745, 5.42175817, 4.61674964, 5.63783097, 4.26310158,
       4.89944267, 4.0178194 , 4.06571221, 2.90626395, 2.61776125]), 'std_score_time': array([1.07573867, 0.83105111, 1.24028623, 0.45433354, 0.60430336,
       0.56532264, 1.21383476, 0.87669158, 0.30632246, 0.47284782]), 'param_c1': masked_array(data=[0.27368213264293245, 0.4476046750545736,
                   1.0483252644516299, 0.2806805093451194,
                   0.6197961186274384, 0.39513046193137213,
                   0.44222278435034806, 0.36113791272700335,
                   0.2165231088481453, 0.4260618662691209],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'param_c2': masked_array(data=[0.06393020846569603, 0.015392106244389584,
                   0.012021696849017553, 0.0010488143930031278,
                   0.03315956184199858, 0.03206506920359485,
                   0.013852873879137457, 0.03077263952889498,
                   0.026106247805974314, 0.14033650480379495],
             mask=[False, False, False, False, False, False, False, False,
                   False, False],
       fill_value='?',
            dtype=object), 'params': [{'c1': 0.27368213264293245, 'c2': 0.06393020846569603}, {'c1': 0.4476046750545736, 'c2': 0.015392106244389584}, {'c1': 1.0483252644516299, 'c2': 0.012021696849017553}, {'c1': 0.2806805093451194, 'c2': 0.0010488143930031278}, {'c1': 0.6197961186274384, 'c2': 0.03315956184199858}, {'c1': 0.39513046193137213, 'c2': 0.03206506920359485}, {'c1': 0.44222278435034806, 'c2': 0.013852873879137457}, {'c1': 0.36113791272700335, 'c2': 0.03077263952889498}, {'c1': 0.2165231088481453, 'c2': 0.026106247805974314}, {'c1': 0.4260618662691209, 'c2': 0.14033650480379495}], 'split0_test_score': array([0.62302138, 0.62053761, 0.61794755, 0.62171041, 0.61794171,
       0.61565213, 0.62388601, 0.61694307, 0.62159301, 0.61656761]), 'split1_test_score': array([0.67630702, 0.67847746, 0.66202185, 0.67955679, 0.67001453,
       0.67597562, 0.67478158, 0.67644303, 0.67811631, 0.67248331]), 'mean_test_score': array([0.6496642 , 0.64950753, 0.6399847 , 0.6506336 , 0.64397812,
       0.64581387, 0.64933379, 0.64669305, 0.64985466, 0.64452546]), 'std_test_score': array([0.02664282, 0.02896993, 0.02203715, 0.02892319, 0.02603641,
       0.03016174, 0.02544778, 0.02974998, 0.02826165, 0.02795785]), 'rank_test_score': array([ 3,  4, 10,  1,  9,  7,  5,  6,  2,  8])}
INFO:tensorflow:Label transition weights learnt from dataset (for a subset of labels)


# WITH MAX_FILE = 350 AND MAX_ITERATIONS = 100 ---> PERFORMING RANDOM GRID SEARCH WITH 100 ITERATIONS
INFO:tensorflow:best params: {'c1': 0.3009931321261636, 'c2': 0.04367114078367961}
INFO:tensorflow:best micro F1 score: 0.6498398623372905
INFO:tensorflow:model size: 1.24M
------------------------------------------------------------------------------------------------------
INFO:tensorflow:micro avg       -> f1 0.82 ; prec 0.85 ; recall 0.80
INFO:tensorflow:macro avg       -> f1 0.55 ; prec 0.60 ; recall 0.52
